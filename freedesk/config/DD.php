<?php 
/* -------------------------------------------------------------
This file is part of FreeDESK

FreeDESK is (C) Copyright 2012 David Cutting

FreeDESK is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

FreeDESK is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with FreeDESK.  If not, see www.gnu.org/licenses

For more information see www.purplepixie.org/freedesk/
-------------------------------------------------------------- */

// NOTE: DO NOT EDIT THIS FILE DIRECTLY FOR CUSTOMISATIONS!
// RATHER USE A PLUGIN MODULE OR OTHER USER-SCRIPT TO ADD DD
// DATA!

// Of course you are free to change this file - this is open-source
// after all but if you do not only will it be overwritten but you
// could well break your install... You have been warned!

/**
 * FreeDESK Main Core Data Dictionary Definitions - do not edit as will be overwritten on upgrade
**/
class FreeDESK_DD
{
/**
 * Static exec function will setup the core data dictionary
 * @param mixed $DESK Instance of FreeDESK
**/
static function Exec(&$DESK)
{
	// System Log (syslog)
	
	$syslog = new DD_Table();
	$syslog->name = "SysLog";
	$syslog->entity = "syslog";
	$syslog->editable = true;
	
	$event_id = new DD_Field();
	$event_id->name = "Event ID";
	$event_id->field = "event_id";
	$event_id->type = DD_FieldType::Int;
	$event_id->searchable = true;
	$event_id->keyfield = true;
	$event_id->display = true;
	$syslog->Add($event_id);
	
	$event_dt = new DD_Field();
	$event_dt->name = "Event DateTime";
	$event_dt->field = "event_dt";
	$event_dt->type = DD_FieldType::DateTime;
	$event_dt->searchable = true;
	$event_dt->display = true;
	$syslog->Add($event_dt);
	
	$event = new DD_Field();
	$event->name="Event";
	$event->field="event";
	$event->type=DD_FieldType::Char;
	$event->size=254;
	$event->searchable = true;
	$event->display = true;
	$syslog->Add($event);
	
	$event_class = new DD_Field();
	$event_class->name="Event Class";
	$event_class->field="event_class";
	$event_class->type=DD_FieldType::Char;
	$event_class->size=128;
	$event_class->searchable = true;
	$event_class->display = true;
	$syslog->Add($event_class);
	
	$event_type = new DD_Field();
	$event_type->name="Event Type";
	$event_type->field="event_type";
	$event_type->type=DD_FieldType::Char;
	$event_type->size=128;
	$event_type->searchable = true;
	$event_type->display = true;
	$syslog->Add($event_type);
	
	$event_level = new DD_Field();
	$event_level->name="Event Level";
	$event_level->field="event_level";
	$event_level->type=DD_FieldType::Int;
	$event_level->searchable = true;
	$event_level->display = true;
	$syslog->Add($event_level);
	
	$DESK->DataDictionary->AddTable($syslog);
	
	// System Configuration (sysconfig)
	
	$sysconfig = new DD_Table();
	$sysconfig->name="SysConfig";
	$sysconfig->entity="sysconfig";
	
	$sc_option = new DD_Field();
	$sc_option->name="SC Option";
	$sc_option->field="sc_option";
	$sc_option->type=DD_FieldType::Char;
	$sc_option->size=254;
	$sc_option->searchable=true;
	$sc_option->display=true;
	$sysconfig->Add($sc_option);
	
	$sc_value = new DD_Field();
	$sc_value->name="SC Value";
	$sc_value->field="sc_value";
	$sc_value->type=DD_FieldType::Char;
	$sc_value->size=254;
	$sc_value->searchable=true;
	$sc_value->display=true;
	$sysconfig->Add($sc_value);
	
	$DESK->DataDictionary->AddTable($sysconfig);
	
	// User Data
	$user = new DD_Table();
	$user->name="Users";
	$user->entity="user";
	
	$f = new DD_Field();
	$f->name="Username";
	$f->field="username";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$f->keyfield=true;
	$user->Add($f);
	
	$f = new DD_Field();
	$f->name="Password";
	$f->field="password";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=false;
	$f->display=false;
	$user->Add($f);
	
	$f = new DD_Field();
	$f->name="Real Name";
	$f->field="realname";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$user->Add($f);
	
	$f = new DD_Field();
	$f->name="Email";
	$f->field="email";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$user->Add($f);
	
	$f = new DD_Field();
	$f->name="Auth Type";
	$f->field="authtype";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=false;
	$f->display=false;
	$user->Add($f);
	
	for ($i=0; $i<10; ++$i)
	{
		$f = new DD_Field();
		$f->name="Spare Field ".$i;
		$f->field="sparefield".$i;
		$f->type=DD_FieldType::Char;
		$f->size=254;
		$f->searchable=true;
		$f->display=true;
		$user->Add($f);
	}
	
	$DESK->DataDictionary->AddTable($user);
	
	// Session
	$session = new DD_Table();
	$session->name="Session";
	$session->entity="session";
	
	$f = new DD_Field();
	$f->name="Session ID";
	$f->field="session_id";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->keyfield=true;
	$f->seachable=true;
	$f->display=true;
	$session->Add($f);
	
	$f = new DD_Field();
	$f->name="Username";
	$f->field="username";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$f->foreignkey=true; 		// n.b. also FK for customer but user just linked internally
	$f->foreignentity="user"; 	// not that it matters as this isn't handled through entity model
	$f->foreignfield="username";// but will create OTM link as a DD_Relationship
	$session->Add($f);
	
	$f = new DD_Field();
	$f->name="Session Type";
	$f->field="sessiontype";
	$f->type=DD_FieldType::Int;
	$f->searchable=false;
	$f->display=false;
	$session->Add($f);
	
	$f = new DD_Field();
	$f->name="Created DateTime";
	$f->field="created_dt";
	$f->type=DD_FieldType::DateTime;
	$f->searchable=true;
	$f->display=true;
	$session->Add($f);
	
	$f = new DD_Field();
	$f->name="Updated DateTime";
	$f->field="updated_dt";
	$f->type=DD_FieldType::DateTime;
	$f->searchable=true;
	$f->display=true;
	$session->Add($f);
	
	$f = new DD_Field();
	$f->name="Expires DateTime";
	$f->field="expires_dt";
	$f->type=DD_FieldType::DateTime;
	$f->searchable=true;
	$f->display=true;
	$session->Add($f);
	
	$DESK->DataDictionary->AddTable($session);
	
	$sessionuser = new DD_Relationship();
	$sessionuser->type=DD_RelationshipType::OTM;
	$sessionuser->firstentity = "user";
	$sessionuser->firstfield = "username";
	$sessionuser->secondentity = "session";
	$sessionuser->secondfield = "username";
	
	$DESK->DataDictionary->AddRelationship($sessionuser);
	
	// Customer
	
	$customer = new DD_Table();
	$customer->name="Customer";
	$customer->entity="customer";
	$customer->editable=true;
	
	$f = new DD_Field();
	$f->name="Customer ID";
	$f->field="customerid";
	$f->type=DD_FieldType::Int;
	$f->searchable=true;
	$f->readonly=true;
	$f->display=true;
	$f->keyfield=true;
	$customer->Add($f);
	
	$f = new DD_Field();
	$f->name="First Name";
	$f->field="firstname";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$customer->Add($f);
	
	$f = new DD_Field();
	$f->name="Last Name";
	$f->field="lastname";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$customer->Add($f);
	
	$f = new DD_Field();
	$f->name="Email";
	$f->field="email";
	$f->type=DD_FieldType::Char;
	$f->size=254;
	$f->searchable=true;
	$f->display=true;
	$customer->Add($f);
	
	$DESK->DataDictionary->AddTable($customer);
}

}

?>
